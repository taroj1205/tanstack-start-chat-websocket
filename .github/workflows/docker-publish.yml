name: Docker Build, Publish and Deploy

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # Deployment environment name (e.g., production, staging)
  DEPLOYMENT_ENVIRONMENT: production
  APP_URL: https://chat.poyo.jp/

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      deployments: write # Required to create and update deployments

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Create GitHub deployment
        id: deployment
        run: |
          DEPLOYMENT_ID=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/deployments \
            -f ref="${{ github.ref }}" \
            -f environment="${{ env.DEPLOYMENT_ENVIRONMENT }}" \
            -f auto_merge=false \
            -f required_contexts=[] \
            --jq .id)
          echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_OUTPUT

      - name: Update deployment status to pending
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/deployments/${{ steps.deployment.outputs.deployment_id }}/statuses \
            -f state="pending" \
            -f environment="${{ env.DEPLOYMENT_ENVIRONMENT }}" \
            -f environment_url="${{ env.APP_URL }}"
            -f description="Deployment started"

      - name: Deploy to production
        uses: appleboy/ssh-action@v1.0.0
        id: deploy
        with:
          host: www2.poyo.jp
          username: app
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd workspaces/taroj1205/chat
            git pull
            docker compose pull
            docker compose up -d
            echo "DEPLOYED=true" >> $GITHUB_ENV

      - name: Update deployment status to success
        if: steps.deploy.outcome == 'success'
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/deployments/${{ steps.deployment.outputs.deployment_id }}/statuses \
            -f state="success" \
            -f environment="${{ env.DEPLOYMENT_ENVIRONMENT }}" \
            -f environment_url="${{ env.APP_URL }}"
            -f description="Deployment succeeded"

      - name: Update deployment status to failure
        if: steps.deploy.outcome == 'failure'
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/deployments/${{ steps.deployment.outputs.deployment_id }}/statuses \
            -f state="failure" \
            -f environment="${{ env.DEPLOYMENT_ENVIRONMENT }}" \
            -f environment_url="${{ env.APP_URL }}"
            -f description="Deployment failed"
