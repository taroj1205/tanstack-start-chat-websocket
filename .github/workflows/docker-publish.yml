name: Docker Build, Publish and Deploy

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to production
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: www2.poyo.jp
          username: app
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd workspaces/taroj1205/chat
            git pull
            docker compose pull
            docker compose up -d

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://chat.poyo.jp

    steps:
      - uses: actions/checkout@v2
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PROD_DEPLOY_SSH_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.PROD_DEPLOY_SSH_KNOWN_HOSTS }}
      - name: Deployment
        run: rsync -avz --delete --exclude-from=.deployignore . ${{ secrets.PROD_DEPLOY_SSH_USER }}@${{ secrets.PROD_DEPLOY_SSH_HOST }}:${{ secrets.PROD_DEPLOY_TARGET_DIR }}
      - name: Docker Management
        run: |
          ssh ${{ secrets.PROD_DEPLOY_SSH_USER }}@${{ secrets.PROD_DEPLOY_SSH_HOST }} 'cd ${{ secrets.PROD_DEPLOY_TARGET_DIR }} && docker compose run --rm app npm install'
          ssh ${{ secrets.PROD_DEPLOY_SSH_USER }}@${{ secrets.PROD_DEPLOY_SSH_HOST }} 'cd ${{ secrets.PROD_DEPLOY_TARGET_DIR }} && docker compose up -d'
          ssh ${{ secrets.PROD_DEPLOY_SSH_USER }}@${{ secrets.PROD_DEPLOY_SSH_HOST }} 'cd ${{ secrets.PROD_DEPLOY_TARGET_DIR }} && docker compose restart app'
